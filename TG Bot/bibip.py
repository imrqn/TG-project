import telebot
from telebot import types
import requests
import time
import datetime

tokken = '7159868970:AAFsm9OEogyC_JKphchr_YAfMw1hEx2iDHY'
bot = telebot.TeleBot(tokken)

flag = False  # —Ñ–ª–∞–∂–æ–∫ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É
every_day = False  # —Ñ–ª–∞–∂–æ–∫ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É


#  –ó–∞–ø–∏—Å—å –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Ñ–∞–π–ª
def write_req(mess, name):
    try:
        with open("text1.txt", "a", encoding='utf8') as file:
            now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            file.write(f"{now}:--{name} -- {mess}\n")
    except Exception as e:
        print(f"Error writing to file: {str(e)}")


#  –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
def your_curr(message, st):
    global flag
    if flag is False:
        bot.send_message(message.chat.id, "–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É! –ß—Ç–æ–±—ã –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è"
                                          " –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–Ω–æ–≤–∞ –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /news.")
        flag = True
    while True:
        time.sleep(1)
        #  –µ–∂–µ—á–∞—Å–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞
        if ":" not in st:
            if datetime.datetime.now().time().strftime("%H:%M:%S")[3:] == '00:00':
                if flag:
                    try:
                        response = requests.get('https://api.coinbase.com/v2/exchange-rates?currency=usd')
                        data = response.json()

                        response_1 = requests.get('https://api.coinbase.com/v2/exchange-rates?currency=btc')
                        data_1 = response_1.json()

                        bot.send_message(message.chat.id, "–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:\n"
                                                          f"1 $ = {data['data']['rates']['RUB']} rub \n"
                                                          f"1 btc = {data_1['data']['rates']['USD']} $ \n"
                                                          "–ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Å–Ω–æ–≤–∞ –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /news")
                    except Exception as e:
                        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ—É—â–∏—Ö –∫—É—Ä—Å–∞—Ö –≤–∞–ª—é—Ç(')
                else:
                    break
        else:  # –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞
            if datetime.datetime.now().time().strftime("%H:%M:%S") == st + ':00':
                if flag:
                    try:
                        response = requests.get('https://api.coinbase.com/v2/exchange-rates?currency=usd')
                        data = response.json()

                        response_1 = requests.get('https://api.coinbase.com/v2/exchange-rates?currency=btc')
                        data_1 = response_1.json()

                        bot.send_message(message.chat.id, "–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:\n"
                                                          f"1 $ = {data['data']['rates']['RUB']} rub \n"
                                                          f"1 btc = {data_1['data']['rates']['USD']} $ \n"
                                                          "–ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Å–Ω–æ–≤–∞ –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /news")
                    except Exception as e:
                        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ—É—â–∏—Ö –∫—É—Ä—Å–∞—Ö –≤–∞–ª—é—Ç(')
                else:
                    break


@bot.message_handler(commands=['news'])
def dist_rib(message):
    global flag
    if flag is False:
        mark_up = types.InlineKeyboardMarkup()
        bt1 = types.InlineKeyboardButton("–ö–∞–∂–¥—ã–π –¥–µ–Ω—å", callback_data='day')
        bt2 = types.InlineKeyboardButton("–ö–∞–∂–¥—ã–π —á–∞—Å", callback_data='hour')
        mark_up.row(bt1, bt2)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ —Ä–∞—Å—Å—ã–ª–∫–∏", reply_markup=mark_up)
    else:
        bot.send_message(message.chat.id, "–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏")
        flag = False


@bot.callback_query_handler(func=lambda callback: callback.data in ('day', 'hour'))
def callback_message_1(callback):
    global every_day

    if callback.data == 'day' and flag is False and every_day is False:
        bot.send_message(callback.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏(–Ω–∞–ø—Ä–∏–º–µ—Ä "14:38")')
        every_day = True
    elif callback.data == 'hour' and flag is False:
        your_curr(callback.message, '10')
    elif callback.data in ('day', 'hour') and flag is True:
        bot.send_message(callback.message.chat.id, '–í—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞')


@bot.message_handler(commands=['start'])
def main(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –±–∏—Ä–∂–∏")
    btn2 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç")
    markup.row(btn1)
    markup.row(btn2)
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Çüëã, {message.from_user.first_name.capitalize()}. "
                                      f"–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–æ–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å –≤–∞–ª—é—Ç–Ω—ã–º —Ä—ã–Ω–∫–æ–º.\n"
                                      f"–í—ã–∑–æ–≤–∏ –∫–æ–º–∞–Ω–¥—É /news, —á—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫—É—Ä—Å–∞"
                                      f" –≤–∞–ª—é—Ç.", reply_markup=markup)


@bot.message_handler()
def get_text_messages(message):
    global every_day

    write_req(message.text, message.from_user.first_name)

    response = requests.get(f'https://api.coinbase.com/v2/exchange-rates?currency={message.text.lower()}')
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã –ø—Ä–∏ –ø–ª—É—á–µ–Ω–∏–∏ –ª—é–±–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –±–æ—Ç –Ω–µ –≤–∫–ª—é—á–∞–ª —Ä–∞—Å—Å—ã–ª–∫—É
    if len(message.text) == 5 and ":" in message.text and every_day is True:
        try:
            if (-1 < int(message.text.split(':')[0]) < 25) and (-1 < int(message.text.split(':')[1]) < 61):
                every_day = False
                your_curr(message, message.text)
        except Exception:
            pass

    if message.text == "–£–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç" or message.text == '/currency':
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton("USD -> RUB", callback_data='show1')
        btn2 = types.InlineKeyboardButton("EUR -> RUB", callback_data='show2')
        btn3 = types.InlineKeyboardButton("BTC -> RUB", callback_data='show3')
        btn4 = types.InlineKeyboardButton("BTC -> USD", callback_data='show4')
        btn5 = types.InlineKeyboardButton("—É–∫–∞–∂–∏—Ç–µ —Å–∞–º–∏", callback_data='show5')
        markup.row(btn1, btn2)
        markup.row(btn3, btn4)
        markup.row(btn5)
        bot.send_message(message.chat.id, "–í–æ—Ç –Ω–µ–∫—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö:", reply_markup=markup)

    elif message.text == "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –±–∏—Ä–∂–∏" or message.text == '/check_exchanges':
        bot.send_message(message.chat.id, "https://www.moex.com/")
    #  –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã, —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    elif str(response.status_code)[0] == '2':
        try:
            data = response.json()
            bot.send_message(message.chat.id, f"1 {message.text.lower()} = {data['data']['rates']['USD']} $")
        except Exception as e:
            bot.send_message(message.chat.id, "–í–æ–∑–º–æ–∂–Ω–æ, –∑–∞–ø—Ä–æ—Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
    every_day = False


url = f'https://api.coinbase.com/v2/exchange-rates?currency=usd'


#  —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ Inline –∫–Ω–æ–ø–æ–∫ –∏ –≤—ã–≤–æ–¥ –∫—É—Ä—Å–∞
@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'show1':
        try:
            response = requests.get('https://api.coinbase.com/v2/exchange-rates?currency=usd')
            data = response.json()
            bot.send_message(callback.message.chat.id, f"1 $ = {data['data']['rates']['RUB']} rub")
        except Exception as e:
            bot.send_message(callback.message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...')

    elif callback.data == 'show2':
        try:
            response = requests.get('https://api.coinbase.com/v2/exchange-rates?currency=eur')
            data = response.json()
            bot.send_message(callback.message.chat.id, f"1 ‚Ç¨ = {data['data']['rates']['RUB']} rub")
        except Exception as e:
            bot.send_message(callback.message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...')

    elif callback.data == 'show3':
        try:
            response = requests.get('https://api.coinbase.com/v2/exchange-rates?currency=btc')
            data = response.json()
            bot.send_message(callback.message.chat.id, f"1 btc = {data['data']['rates']['RUB']} rub")
        except Exception as e:
            bot.send_message(callback.message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...')

    elif callback.data == 'show4':
        try:
            response = requests.get('https://api.coinbase.com/v2/exchange-rates?currency=btc')
            data = response.json()
            bot.send_message(callback.message.chat.id, f"1 btc = {data['data']['rates']['USD']} $")
        except Exception as e:
            bot.send_message(callback.message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...')

    elif callback.data == 'show5':
        bot.send_message(callback.message.chat.id, '–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã(–≤ USD), –Ω–µ –≤—Ö–æ–¥—è—â–µ–π –≤ –±–∞–∑–æ–≤—ã–π –ø–µ—Ä—á–µ–Ω—å, \
–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –µ—ë –∫–æ–¥(ISO). –ù–∞–ø—Ä–∏–º–µ—Ä "GBP"')


bot.polling(none_stop=True)
